{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\PAF Project\\\\prolearnX\\\\frontend\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Paper, Button, Box } from '@mui/material';\nimport CreatePostModal from '../components/post/CreatePostModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  _s();\n  const navigate = useNavigate();\n  const [modalOpen, setModalOpen] = useState(true);\n\n  // Mock user data - in a real app, you would get this from your auth context\n  const currentUser = {\n    username: \"techuser123\",\n    fullName: \"Alex Johnson\",\n    profilePicture: \"https://i.pravatar.cc/300\"\n  };\n  const handleCloseModal = success => {\n    setModalOpen(false);\n    if (success) {\n      // Redirect to home page after successful post creation\n      navigate('/');\n    } else {\n      // If they just closed the modal without posting\n      navigate(-1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [!modalOpen && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Share your knowledge with the community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setModalOpen(true),\n          size: \"large\",\n          children: \"Create a Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CreatePostModal, {\n      open: modalOpen,\n      handleClose: handleCloseModal,\n      user: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"/4Frl9j8+CHwVDj0OK7YqtVxfMk=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useNavigate","Container","Typography","Paper","Button","Box","CreatePostModal","jsxDEV","_jsxDEV","CreatePost","_s","navigate","modalOpen","setModalOpen","currentUser","username","fullName","profilePicture","handleCloseModal","success","maxWidth","sx","mt","mb","children","elevation","p","textAlign","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","size","open","handleClose","user","_c","$RefreshReg$"],"sources":["D:/Projects/PAF Project/prolearnX/frontend/src/pages/CreatePost.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Typography, Paper, Button, Box } from '@mui/material';\r\nimport CreatePostModal from '../components/post/CreatePostModal';\r\n\r\nconst CreatePost = () => {\r\n  const navigate = useNavigate();\r\n  const [modalOpen, setModalOpen] = useState(true);\r\n  \r\n  // Mock user data - in a real app, you would get this from your auth context\r\n  const currentUser = {\r\n    username: \"techuser123\",\r\n    fullName: \"Alex Johnson\",\r\n    profilePicture: \"https://i.pravatar.cc/300\"\r\n  };\r\n  \r\n  const handleCloseModal = (success) => {\r\n    setModalOpen(false);\r\n    if (success) {\r\n      // Redirect to home page after successful post creation\r\n      navigate('/');\r\n    } else {\r\n      // If they just closed the modal without posting\r\n      navigate(-1);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 4, mb: 4 }}>\r\n      {!modalOpen && (\r\n        <Paper elevation={3} sx={{ p: 4, textAlign: 'center' }}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Share your knowledge with the community\r\n          </Typography>\r\n          <Box mt={2}>\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\"\r\n              onClick={() => setModalOpen(true)}\r\n              size=\"large\"\r\n            >\r\n              Create a Post\r\n            </Button>\r\n          </Box>\r\n        </Paper>\r\n      )}\r\n      \r\n      <CreatePostModal\r\n        open={modalOpen}\r\n        handleClose={handleCloseModal}\r\n        user={currentUser}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreatePost;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,UAAU,EAAEC,KAAK,EAAEC,MAAM,EAAEC,GAAG,QAAQ,eAAe;AACzE,OAAOC,eAAe,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAMe,WAAW,GAAG;IAClBC,QAAQ,EAAE,aAAa;IACvBC,QAAQ,EAAE,cAAc;IACxBC,cAAc,EAAE;EAClB,CAAC;EAED,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACpCN,YAAY,CAAC,KAAK,CAAC;IACnB,IAAIM,OAAO,EAAE;MACX;MACAR,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACL;MACAA,QAAQ,CAAC,CAAC,CAAC,CAAC;IACd;EACF,CAAC;EAED,oBACEH,OAAA,CAACP,SAAS;IAACmB,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,GAC3C,CAACZ,SAAS,iBACTJ,OAAA,CAACL,KAAK;MAACsB,SAAS,EAAE,CAAE;MAACJ,EAAE,EAAE;QAAEK,CAAC,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAH,QAAA,gBACrDhB,OAAA,CAACN,UAAU;QAAC0B,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAL,QAAA,EAAC;MAEtC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbzB,OAAA,CAACH,GAAG;QAACiB,EAAE,EAAE,CAAE;QAAAE,QAAA,eACThB,OAAA,CAACJ,MAAM;UACLwB,OAAO,EAAC,WAAW;UACnBM,KAAK,EAAC,SAAS;UACfC,OAAO,EAAEA,CAAA,KAAMtB,YAAY,CAAC,IAAI,CAAE;UAClCuB,IAAI,EAAC,OAAO;UAAAZ,QAAA,EACb;QAED;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,eAEDzB,OAAA,CAACF,eAAe;MACd+B,IAAI,EAAEzB,SAAU;MAChB0B,WAAW,EAAEpB,gBAAiB;MAC9BqB,IAAI,EAAEzB;IAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC;AAACvB,EAAA,CAjDID,UAAU;EAAA,QACGT,WAAW;AAAA;AAAAwC,EAAA,GADxB/B,UAAU;AAmDhB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}