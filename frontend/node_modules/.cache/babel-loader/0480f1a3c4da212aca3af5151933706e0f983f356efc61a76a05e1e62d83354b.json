{"ast":null,"code":"import axios from 'axios';\nconst API_URL = `${process.env.REACT_APP_API_URL || ''}/api`;\nclass PostService {\n  // Get all posts (paginated)\n  getPosts(page = 0, size = 10) {\n    return axios.get(`${API_URL}/posts?page=${page}&size=${size}`);\n  }\n\n  // Get posts by user\n  getPostsByUser(username, page = 0, size = 10) {\n    return axios.get(`${API_URL}/users/${username}/posts?page=${page}&size=${size}`);\n  }\n\n  // Get posts by category\n  getPostsByCategory(category, page = 0, size = 10) {\n    return axios.get(`${API_URL}/posts/category/${category}?page=${page}&size=${size}`);\n  }\n\n  // Get a single post by ID\n  getPost(id) {\n    return axios.get(`${API_URL}/posts/${id}`);\n  }\n\n  // Create a new post\n  createPost(formData) {\n    return axios.post(`${API_URL}/posts`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  // Update an existing post\n  updatePost(id, formData) {\n    return axios.put(`${API_URL}/posts/${id}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  // Delete a post\n  deletePost(id) {\n    return axios.delete(`${API_URL}/posts/${id}`);\n  }\n\n  // Like a post\n  likePost(id) {\n    return axios.post(`${API_URL}/posts/${id}/like`);\n  }\n\n  // Unlike a post\n  unlikePost(id) {\n    return axios.delete(`${API_URL}/posts/${id}/like`);\n  }\n\n  // Add a comment to a post\n  addComment(postId, content) {\n    return axios.post(`${API_URL}/posts/${postId}/comments`, {\n      content\n    });\n  }\n\n  // Delete a comment from a post\n  deleteComment(postId, commentId) {\n    return axios.delete(`${API_URL}/posts/${postId}/comments/${commentId}`);\n  }\n}\nexport default new PostService();","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","PostService","getPosts","page","size","get","getPostsByUser","username","getPostsByCategory","category","getPost","id","createPost","formData","post","headers","updatePost","put","deletePost","delete","likePost","unlikePost","addComment","postId","content","deleteComment","commentId"],"sources":["D:/Projects/PAF Project/prolearnX/frontend/src/services/PostService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = `${process.env.REACT_APP_API_URL || ''}/api`;\r\n\r\nclass PostService {\r\n  // Get all posts (paginated)\r\n  getPosts(page = 0, size = 10) {\r\n    return axios.get(`${API_URL}/posts?page=${page}&size=${size}`);\r\n  }\r\n\r\n  // Get posts by user\r\n  getPostsByUser(username, page = 0, size = 10) {\r\n    return axios.get(`${API_URL}/users/${username}/posts?page=${page}&size=${size}`);\r\n  }\r\n\r\n  // Get posts by category\r\n  getPostsByCategory(category, page = 0, size = 10) {\r\n    return axios.get(`${API_URL}/posts/category/${category}?page=${page}&size=${size}`);\r\n  }\r\n\r\n  // Get a single post by ID\r\n  getPost(id) {\r\n    return axios.get(`${API_URL}/posts/${id}`);\r\n  }\r\n\r\n  // Create a new post\r\n  createPost(formData) {\r\n    return axios.post(`${API_URL}/posts`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  }\r\n\r\n  // Update an existing post\r\n  updatePost(id, formData) {\r\n    return axios.put(`${API_URL}/posts/${id}`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  }\r\n\r\n  // Delete a post\r\n  deletePost(id) {\r\n    return axios.delete(`${API_URL}/posts/${id}`);\r\n  }\r\n\r\n  // Like a post\r\n  likePost(id) {\r\n    return axios.post(`${API_URL}/posts/${id}/like`);\r\n  }\r\n\r\n  // Unlike a post\r\n  unlikePost(id) {\r\n    return axios.delete(`${API_URL}/posts/${id}/like`);\r\n  }\r\n\r\n  // Add a comment to a post\r\n  addComment(postId, content) {\r\n    return axios.post(`${API_URL}/posts/${postId}/comments`, { content });\r\n  }\r\n\r\n  // Delete a comment from a post\r\n  deleteComment(postId, commentId) {\r\n    return axios.delete(`${API_URL}/posts/${postId}/comments/${commentId}`);\r\n  }\r\n}\r\n\r\nexport default new PostService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,EAAE,MAAM;AAE5D,MAAMC,WAAW,CAAC;EAChB;EACAC,QAAQA,CAACC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,EAAE;IAC5B,OAAOR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,eAAeM,IAAI,SAASC,IAAI,EAAE,CAAC;EAChE;;EAEA;EACAE,cAAcA,CAACC,QAAQ,EAAEJ,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,EAAE;IAC5C,OAAOR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,UAAUU,QAAQ,eAAeJ,IAAI,SAASC,IAAI,EAAE,CAAC;EAClF;;EAEA;EACAI,kBAAkBA,CAACC,QAAQ,EAAEN,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,EAAE;IAChD,OAAOR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,mBAAmBY,QAAQ,SAASN,IAAI,SAASC,IAAI,EAAE,CAAC;EACrF;;EAEA;EACAM,OAAOA,CAACC,EAAE,EAAE;IACV,OAAOf,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,UAAUc,EAAE,EAAE,CAAC;EAC5C;;EAEA;EACAC,UAAUA,CAACC,QAAQ,EAAE;IACnB,OAAOjB,KAAK,CAACkB,IAAI,CAAC,GAAGjB,OAAO,QAAQ,EAAEgB,QAAQ,EAAE;MAC9CE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ;;EAEA;EACAC,UAAUA,CAACL,EAAE,EAAEE,QAAQ,EAAE;IACvB,OAAOjB,KAAK,CAACqB,GAAG,CAAC,GAAGpB,OAAO,UAAUc,EAAE,EAAE,EAAEE,QAAQ,EAAE;MACnDE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ;;EAEA;EACAG,UAAUA,CAACP,EAAE,EAAE;IACb,OAAOf,KAAK,CAACuB,MAAM,CAAC,GAAGtB,OAAO,UAAUc,EAAE,EAAE,CAAC;EAC/C;;EAEA;EACAS,QAAQA,CAACT,EAAE,EAAE;IACX,OAAOf,KAAK,CAACkB,IAAI,CAAC,GAAGjB,OAAO,UAAUc,EAAE,OAAO,CAAC;EAClD;;EAEA;EACAU,UAAUA,CAACV,EAAE,EAAE;IACb,OAAOf,KAAK,CAACuB,MAAM,CAAC,GAAGtB,OAAO,UAAUc,EAAE,OAAO,CAAC;EACpD;;EAEA;EACAW,UAAUA,CAACC,MAAM,EAAEC,OAAO,EAAE;IAC1B,OAAO5B,KAAK,CAACkB,IAAI,CAAC,GAAGjB,OAAO,UAAU0B,MAAM,WAAW,EAAE;MAAEC;IAAQ,CAAC,CAAC;EACvE;;EAEA;EACAC,aAAaA,CAACF,MAAM,EAAEG,SAAS,EAAE;IAC/B,OAAO9B,KAAK,CAACuB,MAAM,CAAC,GAAGtB,OAAO,UAAU0B,MAAM,aAAaG,SAAS,EAAE,CAAC;EACzE;AACF;AAEA,eAAe,IAAIzB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}