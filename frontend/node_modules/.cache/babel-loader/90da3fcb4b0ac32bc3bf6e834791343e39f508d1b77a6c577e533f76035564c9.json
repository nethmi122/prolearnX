{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\PAF Project\\\\prolearnX\\\\frontend\\\\src\\\\components\\\\comment\\\\CommentSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, Button, Typography, Avatar, List, ListItem, Divider } from '@mui/material';\n\n// This is a simplified comment section component\n// In a real implementation, you would fetch comments from the API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  postId\n}) => {\n  _s();\n  const [commentText, setCommentText] = useState('');\n  // Mock comments for display - replace with real data from API\n  const [comments, setComments] = useState([]);\n  const handleCommentChange = e => {\n    setCommentText(e.target.value);\n  };\n  const handleSubmitComment = () => {\n    if (!commentText.trim()) return;\n\n    // In a real app, you would call an API here\n    // For now, we'll just add the comment to our local state\n    const newComment = {\n      id: Date.now(),\n      content: commentText,\n      username: 'currentUser',\n      userProfilePicture: null,\n      createdAt: new Date().toISOString()\n    };\n    setComments([newComment, ...comments]);\n    setCommentText('');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"comment-section\",\n        fullWidth: true,\n        placeholder: \"Write a comment...\",\n        variant: \"outlined\",\n        size: \"small\",\n        value: commentText,\n        onChange: handleCommentChange,\n        sx: {\n          mr: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleSubmitComment,\n        disabled: !commentText.trim(),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          sx: {\n            px: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: comment.userProfilePicture,\n              alt: comment.username,\n              sx: {\n                mr: 2,\n                width: 32,\n                height: 32\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flexGrow: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: comment.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: new Date(comment.createdAt).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: comment.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), index < comments.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 47\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      children: \"No comments yet. Be the first to comment!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"OwoHpy0aSuKhMPCzEfvSjFxLHaw=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","Typography","Avatar","List","ListItem","Divider","jsxDEV","_jsxDEV","CommentSection","postId","_s","commentText","setCommentText","comments","setComments","handleCommentChange","e","target","value","handleSubmitComment","trim","newComment","id","Date","now","content","username","userProfilePicture","createdAt","toISOString","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","mb","fullWidth","placeholder","size","onChange","mr","onClick","disabled","length","map","comment","index","Fragment","alignItems","px","width","src","alt","height","flexGrow","justifyContent","color","toLocaleDateString","component","_c","$RefreshReg$"],"sources":["D:/Projects/PAF Project/prolearnX/frontend/src/components/comment/CommentSection.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, TextField, Button, Typography, Avatar, List, ListItem, Divider } from '@mui/material';\r\n\r\n// This is a simplified comment section component\r\n// In a real implementation, you would fetch comments from the API\r\nconst CommentSection = ({ postId }) => {\r\n  const [commentText, setCommentText] = useState('');\r\n  // Mock comments for display - replace with real data from API\r\n  const [comments, setComments] = useState([]);\r\n  \r\n  const handleCommentChange = (e) => {\r\n    setCommentText(e.target.value);\r\n  };\r\n  \r\n  const handleSubmitComment = () => {\r\n    if (!commentText.trim()) return;\r\n    \r\n    // In a real app, you would call an API here\r\n    // For now, we'll just add the comment to our local state\r\n    const newComment = {\r\n      id: Date.now(),\r\n      content: commentText,\r\n      username: 'currentUser',\r\n      userProfilePicture: null,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    \r\n    setComments([newComment, ...comments]);\r\n    setCommentText('');\r\n  };\r\n  \r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Comments\r\n      </Typography>\r\n      \r\n      {/* Comment input */}\r\n      <Box sx={{ display: 'flex', mb: 3 }}>\r\n        <TextField\r\n          id=\"comment-section\"\r\n          fullWidth\r\n          placeholder=\"Write a comment...\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={commentText}\r\n          onChange={handleCommentChange}\r\n          sx={{ mr: 1 }}\r\n        />\r\n        <Button \r\n          variant=\"contained\" \r\n          onClick={handleSubmitComment}\r\n          disabled={!commentText.trim()}\r\n        >\r\n          Post\r\n        </Button>\r\n      </Box>\r\n      \r\n      {/* Comments list */}\r\n      {comments.length > 0 ? (\r\n        <List>\r\n          {comments.map((comment, index) => (\r\n            <React.Fragment key={comment.id}>\r\n              <ListItem alignItems=\"flex-start\" sx={{ px: 0 }}>\r\n                <Box sx={{ display: 'flex', width: '100%' }}>\r\n                  <Avatar \r\n                    src={comment.userProfilePicture} \r\n                    alt={comment.username}\r\n                    sx={{ mr: 2, width: 32, height: 32 }}\r\n                  />\r\n                  <Box sx={{ flexGrow: 1 }}>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                      <Typography variant=\"subtitle2\">\r\n                        {comment.username}\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        {new Date(comment.createdAt).toLocaleDateString()}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography variant=\"body2\">\r\n                      {comment.content}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </ListItem>\r\n              {index < comments.length - 1 && <Divider component=\"li\" />}\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          No comments yet. Be the first to comment!\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommentSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}