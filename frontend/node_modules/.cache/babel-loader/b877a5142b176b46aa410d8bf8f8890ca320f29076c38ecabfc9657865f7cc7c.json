{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\PAF Project\\\\prolearnX\\\\frontend\\\\src\\\\components\\\\post\\\\DeletePostDialog.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, CircularProgress } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport PostService from '../../services/PostService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeletePostDialog = ({\n  open,\n  handleClose,\n  postId,\n  postTitle\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [isDeleting, setIsDeleting] = React.useState(false);\n  const handleDelete = async () => {\n    setIsDeleting(true);\n    try {\n      await PostService.deletePost(postId);\n      handleClose();\n      navigate('/'); // Redirect to home page after deletion\n    } catch (error) {\n      console.error('Error deleting post:', error);\n      alert('Failed to delete post. Please try again.');\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: !isDeleting ? handleClose : undefined,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Delete Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: [\"Are you sure you want to delete \\\"\", postTitle, \"\\\"? This action cannot be undone, and all associated media will be permanently removed.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        disabled: isDeleting,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDelete,\n        color: \"error\",\n        disabled: isDeleting,\n        startIcon: isDeleting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 45\n        }, this) : null,\n        children: isDeleting ? 'Deleting...' : 'Delete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(DeletePostDialog, \"e15sadt0k/u04SZVqI2ie3I+xlw=\", false, function () {\n  return [useNavigate];\n});\n_c = DeletePostDialog;\nexport default DeletePostDialog;\nvar _c;\n$RefreshReg$(_c, \"DeletePostDialog\");","map":{"version":3,"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","CircularProgress","useNavigate","PostService","jsxDEV","_jsxDEV","DeletePostDialog","open","handleClose","postId","postTitle","_s","navigate","isDeleting","setIsDeleting","useState","handleDelete","deletePost","error","console","alert","onClose","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","color","startIcon","size","_c","$RefreshReg$"],"sources":["D:/Projects/PAF Project/prolearnX/frontend/src/components/post/DeletePostDialog.jsx"],"sourcesContent":["import React from 'react';\r\nimport { \r\n    Button, Dialog, DialogActions, DialogContent, \r\n    DialogContentText, DialogTitle, CircularProgress \r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PostService from '../../services/PostService';\r\n\r\nconst DeletePostDialog = ({ open, handleClose, postId, postTitle }) => {\r\n    const navigate = useNavigate();\r\n    const [isDeleting, setIsDeleting] = React.useState(false);\r\n    \r\n    const handleDelete = async () => {\r\n        setIsDeleting(true);\r\n        try {\r\n            await PostService.deletePost(postId);\r\n            handleClose();\r\n            navigate('/'); // Redirect to home page after deletion\r\n        } catch (error) {\r\n            console.error('Error deleting post:', error);\r\n            alert('Failed to delete post. Please try again.');\r\n        } finally {\r\n            setIsDeleting(false);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={!isDeleting ? handleClose : undefined}\r\n        >\r\n            <DialogTitle>Delete Post</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Are you sure you want to delete \"{postTitle}\"? This action cannot be undone,\r\n                    and all associated media will be permanently removed.\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={handleClose} \r\n                    disabled={isDeleting}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n                <Button \r\n                    onClick={handleDelete} \r\n                    color=\"error\" \r\n                    disabled={isDeleting}\r\n                    startIcon={isDeleting ? <CircularProgress size={20} /> : null}\r\n                >\r\n                    {isDeleting ? 'Deleting...' : 'Delete'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default DeletePostDialog;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,MAAM,EAAEC,MAAM,EAAEC,aAAa,EAAEC,aAAa,EAC5CC,iBAAiB,EAAEC,WAAW,EAAEC,gBAAgB,QAC7C,eAAe;AACtB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGpB,KAAK,CAACqB,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7BF,aAAa,CAAC,IAAI,CAAC;IACnB,IAAI;MACA,MAAMX,WAAW,CAACc,UAAU,CAACR,MAAM,CAAC;MACpCD,WAAW,CAAC,CAAC;MACbI,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CE,KAAK,CAAC,0CAA0C,CAAC;IACrD,CAAC,SAAS;MACNN,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACIT,OAAA,CAACT,MAAM;IACHW,IAAI,EAAEA,IAAK;IACXc,OAAO,EAAE,CAACR,UAAU,GAAGL,WAAW,GAAGc,SAAU;IAAAC,QAAA,gBAE/ClB,OAAA,CAACL,WAAW;MAAAuB,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACtCtB,OAAA,CAACP,aAAa;MAAAyB,QAAA,eACVlB,OAAA,CAACN,iBAAiB;QAAAwB,QAAA,GAAC,oCACkB,EAACb,SAAS,EAAC,yFAEhD;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAChBtB,OAAA,CAACR,aAAa;MAAA0B,QAAA,gBACVlB,OAAA,CAACV,MAAM;QACHiC,OAAO,EAAEpB,WAAY;QACrBqB,QAAQ,EAAEhB,UAAW;QAAAU,QAAA,EACxB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtB,OAAA,CAACV,MAAM;QACHiC,OAAO,EAAEZ,YAAa;QACtBc,KAAK,EAAC,OAAO;QACbD,QAAQ,EAAEhB,UAAW;QACrBkB,SAAS,EAAElB,UAAU,gBAAGR,OAAA,CAACJ,gBAAgB;UAAC+B,IAAI,EAAE;QAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GAAG,IAAK;QAAAJ,QAAA,EAE7DV,UAAU,GAAG,aAAa,GAAG;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEjB,CAAC;AAAChB,EAAA,CAhDIL,gBAAgB;EAAA,QACDJ,WAAW;AAAA;AAAA+B,EAAA,GAD1B3B,gBAAgB;AAkDtB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}