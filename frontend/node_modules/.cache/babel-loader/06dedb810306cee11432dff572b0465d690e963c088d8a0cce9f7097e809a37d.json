{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\PAF Project\\\\prolearnX\\\\frontend\\\\src\\\\components\\\\post\\\\EditPostForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, TextField, Box, Typography, Grid, Paper, IconButton, FormControl, InputLabel, Select, MenuItem, CircularProgress, Card, CardMedia, Chip } from '@mui/material';\nimport { CloudUpload as UploadIcon, Delete as DeleteIcon, PhotoCamera as CameraIcon, Videocam as VideoIcon } from '@mui/icons-material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport PostService from '../../services/PostService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPostForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    category: ''\n  });\n  const [existingMedia, setExistingMedia] = useState([]);\n  const [retainMediaIds, setRetainMediaIds] = useState([]);\n  const [newFiles, setNewFiles] = useState([]);\n  const [newFilePreviews, setNewFilePreviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const fileInputRef = useRef();\n\n  // Fetch post data\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        var _post$media;\n        const response = await PostService.getPost(id);\n        const post = response.data;\n        setFormData({\n          title: post.title,\n          description: post.description || '',\n          category: post.category\n        });\n        setExistingMedia(post.media || []);\n        setRetainMediaIds(((_post$media = post.media) === null || _post$media === void 0 ? void 0 : _post$media.map(m => m.id)) || []);\n        setIsLoading(false);\n      } catch (err) {\n        console.error('Error fetching post:', err);\n        setError('Failed to load post data.');\n        setIsLoading(false);\n      }\n    };\n    fetchPost();\n  }, [id]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const toggleExistingMedia = mediaId => {\n    if (retainMediaIds.includes(mediaId)) {\n      setRetainMediaIds(prev => prev.filter(id => id !== mediaId));\n    } else {\n      setRetainMediaIds(prev => [...prev, mediaId]);\n    }\n  };\n  const handleNewFileSelect = e => {\n    const files = Array.from(e.target.files);\n\n    // Calculate total media count\n    const totalMediaCount = retainMediaIds.length + newFiles.length + files.length;\n\n    // Validate file count\n    if (totalMediaCount > 3) {\n      setError('You can only have up to 3 media files total.');\n      return;\n    }\n\n    // Check if there's a video\n    const hasExistingVideo = existingMedia.some(m => retainMediaIds.includes(m.id) && m.type === 'VIDEO');\n    const hasNewVideo = [...newFiles, ...files].some(file => file.type.startsWith('video/'));\n    if ((hasExistingVideo || hasNewVideo) && totalMediaCount > 1) {\n      setError('When including a video, you cannot have additional media.');\n      return;\n    }\n\n    // File size validation\n    const invalidFile = files.find(file => {\n      const isVideo = file.type.startsWith('video/');\n      const maxSize = isVideo ? 30 * 1024 * 1024 : 10 * 1024 * 1024;\n      return file.size > maxSize;\n    });\n    if (invalidFile) {\n      const isVideo = invalidFile.type.startsWith('video/');\n      setError(`File too large: ${invalidFile.name}. ${isVideo ? 'Videos' : 'Images'} must be under ${isVideo ? '30MB' : '10MB'}.`);\n      return;\n    }\n\n    // Process valid files\n    setNewFiles(prev => [...prev, ...files]);\n\n    // Create file previews\n    const newPreviews = files.map(file => {\n      const isVideo = file.type.startsWith('video/');\n      return {\n        file,\n        url: URL.createObjectURL(file),\n        type: isVideo ? 'video' : 'image'\n      };\n    });\n    setNewFilePreviews(prev => [...prev, ...newPreviews]);\n    setError('');\n  };\n  const removeNewFile = index => {\n    const newFilesList = [...newFiles];\n    newFilesList.splice(index, 1);\n    setNewFiles(newFilesList);\n    const newPreviewList = [...newFilePreviews];\n    URL.revokeObjectURL(newPreviewList[index].url);\n    newPreviewList.splice(index, 1);\n    setNewFilePreviews(newPreviewList);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.title.trim() || !formData.category) {\n      setError('Title and category are required.');\n      return;\n    }\n    setIsSubmitting(true);\n    setError('');\n    try {\n      // Create FormData object\n      const postFormData = new FormData();\n\n      // Add post data as JSON\n      const postBlob = new Blob([JSON.stringify(formData)], {\n        type: 'application/json'\n      });\n      postFormData.append('post', postBlob);\n\n      // Add retained media IDs\n      retainMediaIds.forEach(mediaId => {\n        postFormData.append('retainMediaIds', mediaId);\n      });\n\n      // Add new media files\n      newFiles.forEach(file => {\n        postFormData.append('newMedia', file);\n      });\n\n      // Submit to API\n      await PostService.updatePost(id, postFormData);\n\n      // Redirect to post detail page\n      navigate(`/posts/${id}`);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error updating post:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to update post. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 4,\n      maxWidth: 800,\n      mx: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      variant: \"body2\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"title\",\n        label: \"Title\",\n        name: \"title\",\n        value: formData.title,\n        onChange: handleInputChange,\n        disabled: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        margin: \"normal\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"category-label\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"category-label\",\n          id: \"category\",\n          name: \"category\",\n          value: formData.category,\n          label: \"Category\",\n          onChange: handleInputChange,\n          disabled: isSubmitting,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"CODING\",\n            children: \"Coding\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"SOFTWARE_DEVELOPMENT\",\n            children: \"Software Development\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"CYBERSECURITY\",\n            children: \"Cybersecurity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"DATA_SCIENCE\",\n            children: \"Data Science\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"OTHER\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"description\",\n        label: \"Description\",\n        name: \"description\",\n        value: formData.description,\n        onChange: handleInputChange,\n        multiline: true,\n        rows: 4,\n        disabled: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), existingMedia.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"Current Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: existingMedia.map(media => {\n            const isRetained = retainMediaIds.includes(media.id);\n            const apiUrl = `${process.env.REACT_APP_API_URL || ''}/api/posts/media/${media.url}`;\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  position: 'relative',\n                  opacity: isRetained ? 1 : 0.5,\n                  transition: 'opacity 0.3s'\n                },\n                children: [media.type === 'IMAGE' ? /*#__PURE__*/_jsxDEV(CardMedia, {\n                  component: \"img\",\n                  height: \"140\",\n                  image: apiUrl,\n                  alt: \"Post media\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(CardMedia, {\n                  component: \"video\",\n                  height: \"140\",\n                  src: apiUrl,\n                  controls: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: isRetained ? \"Remove\" : \"Deleted\",\n                  color: isRetained ? \"primary\" : \"error\",\n                  onClick: () => toggleExistingMedia(media.id),\n                  sx: {\n                    position: 'absolute',\n                    top: 8,\n                    right: 8\n                  },\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 41\n              }, this)\n            }, media.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }, this), newFilePreviews.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"New Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: newFilePreviews.map((preview, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                position: 'relative'\n              },\n              children: [preview.type === 'image' ? /*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"img\",\n                height: \"140\",\n                image: preview.url,\n                alt: `Preview ${index}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"video\",\n                height: \"140\",\n                src: preview.url,\n                controls: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                sx: {\n                  position: 'absolute',\n                  top: 5,\n                  right: 5,\n                  bgcolor: 'rgba(255, 255, 255, 0.7)'\n                },\n                size: \"small\",\n                onClick: () => removeNewFile(index),\n                disabled: isSubmitting,\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }, this), retainMediaIds.length + newFiles.length < 3 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInputRef,\n          accept: \"image/*,video/*\",\n          id: \"contained-button-file\",\n          type: \"file\",\n          multiple: true,\n          onChange: handleNewFileSelect,\n          style: {\n            display: 'none'\n          },\n          disabled: isSubmitting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            component: \"label\",\n            htmlFor: \"contained-button-file\",\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 44\n            }, this),\n            disabled: isSubmitting || retainMediaIds.length + newFiles.length >= 3 || existingMedia.some(m => retainMediaIds.includes(m.id) && m.type === 'VIDEO') || newFiles.some(f => f.type.startsWith('video/')),\n            children: \"Add Media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [retainMediaIds.length + newFiles.length, \"/3 files\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => navigate(`/posts/${id}`),\n          disabled: isSubmitting,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          disabled: isSubmitting || !formData.title.trim() || !formData.category,\n          startIcon: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20,\n            color: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 51\n          }, this) : null,\n          children: isSubmitting ? 'Saving...' : 'Update Post'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPostForm, \"30CMwRHYQt8vOg00ciH9xoPtEaM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPostForm;\nexport default EditPostForm;\nvar _c;\n$RefreshReg$(_c, \"EditPostForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","TextField","Box","Typography","Grid","Paper","IconButton","FormControl","InputLabel","Select","MenuItem","CircularProgress","Card","CardMedia","Chip","CloudUpload","UploadIcon","Delete","DeleteIcon","PhotoCamera","CameraIcon","Videocam","VideoIcon","useNavigate","useParams","PostService","jsxDEV","_jsxDEV","EditPostForm","_s","id","navigate","formData","setFormData","title","description","category","existingMedia","setExistingMedia","retainMediaIds","setRetainMediaIds","newFiles","setNewFiles","newFilePreviews","setNewFilePreviews","isLoading","setIsLoading","isSubmitting","setIsSubmitting","error","setError","fileInputRef","fetchPost","_post$media","response","getPost","post","data","media","map","m","err","console","handleInputChange","e","name","value","target","toggleExistingMedia","mediaId","includes","prev","filter","handleNewFileSelect","files","Array","from","totalMediaCount","length","hasExistingVideo","some","type","hasNewVideo","file","startsWith","invalidFile","find","isVideo","maxSize","size","newPreviews","url","URL","createObjectURL","removeNewFile","index","newFilesList","splice","newPreviewList","revokeObjectURL","handleSubmit","preventDefault","trim","postFormData","FormData","postBlob","Blob","JSON","stringify","append","forEach","updatePost","_err$response","_err$response$data","message","sx","display","justifyContent","py","children","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","maxWidth","mx","variant","component","gutterBottom","color","mb","onSubmit","noValidate","margin","required","fullWidth","label","onChange","disabled","labelId","multiline","rows","my","container","spacing","isRetained","apiUrl","process","env","REACT_APP_API_URL","item","xs","sm","position","opacity","transition","height","image","alt","src","controls","onClick","top","right","preview","bgcolor","mt","alignItems","ref","accept","multiple","style","gap","htmlFor","startIcon","f","_c","$RefreshReg$"],"sources":["D:/Projects/PAF Project/prolearnX/frontend/src/components/post/EditPostForm.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { \r\n    Button, TextField, Box, Typography, Grid, Paper, \r\n    IconButton, FormControl, InputLabel, Select, MenuItem,\r\n    CircularProgress, Card, CardMedia, Chip\r\n} from '@mui/material';\r\nimport { \r\n    CloudUpload as UploadIcon, \r\n    Delete as DeleteIcon,\r\n    PhotoCamera as CameraIcon,\r\n    Videocam as VideoIcon\r\n} from '@mui/icons-material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport PostService from '../../services/PostService';\r\n\r\nconst EditPostForm = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        description: '',\r\n        category: ''\r\n    });\r\n    \r\n    const [existingMedia, setExistingMedia] = useState([]);\r\n    const [retainMediaIds, setRetainMediaIds] = useState([]);\r\n    const [newFiles, setNewFiles] = useState([]);\r\n    const [newFilePreviews, setNewFilePreviews] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const fileInputRef = useRef();\r\n    \r\n    // Fetch post data\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const response = await PostService.getPost(id);\r\n                const post = response.data;\r\n                \r\n                setFormData({\r\n                    title: post.title,\r\n                    description: post.description || '',\r\n                    category: post.category\r\n                });\r\n                \r\n                setExistingMedia(post.media || []);\r\n                setRetainMediaIds(post.media?.map(m => m.id) || []);\r\n                setIsLoading(false);\r\n            } catch (err) {\r\n                console.error('Error fetching post:', err);\r\n                setError('Failed to load post data.');\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        \r\n        fetchPost();\r\n    }, [id]);\r\n    \r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value\r\n        });\r\n    };\r\n    \r\n    const toggleExistingMedia = (mediaId) => {\r\n        if (retainMediaIds.includes(mediaId)) {\r\n            setRetainMediaIds(prev => prev.filter(id => id !== mediaId));\r\n        } else {\r\n            setRetainMediaIds(prev => [...prev, mediaId]);\r\n        }\r\n    };\r\n    \r\n    const handleNewFileSelect = (e) => {\r\n        const files = Array.from(e.target.files);\r\n        \r\n        // Calculate total media count\r\n        const totalMediaCount = retainMediaIds.length + newFiles.length + files.length;\r\n        \r\n        // Validate file count\r\n        if (totalMediaCount > 3) {\r\n            setError('You can only have up to 3 media files total.');\r\n            return;\r\n        }\r\n        \r\n        // Check if there's a video\r\n        const hasExistingVideo = existingMedia.some(m => \r\n            retainMediaIds.includes(m.id) && m.type === 'VIDEO');\r\n        const hasNewVideo = [...newFiles, ...files].some(file => \r\n            file.type.startsWith('video/'));\r\n            \r\n        if ((hasExistingVideo || hasNewVideo) && totalMediaCount > 1) {\r\n            setError('When including a video, you cannot have additional media.');\r\n            return;\r\n        }\r\n        \r\n        // File size validation\r\n        const invalidFile = files.find(file => {\r\n            const isVideo = file.type.startsWith('video/');\r\n            const maxSize = isVideo ? 30 * 1024 * 1024 : 10 * 1024 * 1024;\r\n            return file.size > maxSize;\r\n        });\r\n        \r\n        if (invalidFile) {\r\n            const isVideo = invalidFile.type.startsWith('video/');\r\n            setError(`File too large: ${invalidFile.name}. ${isVideo ? 'Videos' : 'Images'} must be under ${isVideo ? '30MB' : '10MB'}.`);\r\n            return;\r\n        }\r\n        \r\n        // Process valid files\r\n        setNewFiles(prev => [...prev, ...files]);\r\n        \r\n        // Create file previews\r\n        const newPreviews = files.map(file => {\r\n            const isVideo = file.type.startsWith('video/');\r\n            return {\r\n                file,\r\n                url: URL.createObjectURL(file),\r\n                type: isVideo ? 'video' : 'image'\r\n            };\r\n        });\r\n        \r\n        setNewFilePreviews(prev => [...prev, ...newPreviews]);\r\n        setError('');\r\n    };\r\n    \r\n    const removeNewFile = (index) => {\r\n        const newFilesList = [...newFiles];\r\n        newFilesList.splice(index, 1);\r\n        setNewFiles(newFilesList);\r\n        \r\n        const newPreviewList = [...newFilePreviews];\r\n        URL.revokeObjectURL(newPreviewList[index].url);\r\n        newPreviewList.splice(index, 1);\r\n        setNewFilePreviews(newPreviewList);\r\n    };\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (!formData.title.trim() || !formData.category) {\r\n            setError('Title and category are required.');\r\n            return;\r\n        }\r\n        \r\n        setIsSubmitting(true);\r\n        setError('');\r\n        \r\n        try {\r\n            // Create FormData object\r\n            const postFormData = new FormData();\r\n            \r\n            // Add post data as JSON\r\n            const postBlob = new Blob([JSON.stringify(formData)], {\r\n                type: 'application/json'\r\n            });\r\n            postFormData.append('post', postBlob);\r\n            \r\n            // Add retained media IDs\r\n            retainMediaIds.forEach(mediaId => {\r\n                postFormData.append('retainMediaIds', mediaId);\r\n            });\r\n            \r\n            // Add new media files\r\n            newFiles.forEach(file => {\r\n                postFormData.append('newMedia', file);\r\n            });\r\n            \r\n            // Submit to API\r\n            await PostService.updatePost(id, postFormData);\r\n            \r\n            // Redirect to post detail page\r\n            navigate(`/posts/${id}`);\r\n        } catch (err) {\r\n            console.error('Error updating post:', err);\r\n            setError(err.response?.data?.message || 'Failed to update post. Please try again.');\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n    \r\n    if (isLoading) {\r\n        return (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\r\n                <CircularProgress />\r\n            </Box>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <Paper elevation={3} sx={{ p: 4, maxWidth: 800, mx: 'auto' }}>\r\n            <Typography variant=\"h5\" component=\"h1\" gutterBottom>\r\n                Edit Post\r\n            </Typography>\r\n            \r\n            {error && (\r\n                <Typography color=\"error\" variant=\"body2\" sx={{ mb: 2 }}>\r\n                    {error}\r\n                </Typography>\r\n            )}\r\n            \r\n            <Box component=\"form\" onSubmit={handleSubmit} noValidate>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"title\"\r\n                    label=\"Title\"\r\n                    name=\"title\"\r\n                    value={formData.title}\r\n                    onChange={handleInputChange}\r\n                    disabled={isSubmitting}\r\n                />\r\n                \r\n                <FormControl fullWidth margin=\"normal\" required>\r\n                    <InputLabel id=\"category-label\">Category</InputLabel>\r\n                    <Select\r\n                        labelId=\"category-label\"\r\n                        id=\"category\"\r\n                        name=\"category\"\r\n                        value={formData.category}\r\n                        label=\"Category\"\r\n                        onChange={handleInputChange}\r\n                        disabled={isSubmitting}\r\n                    >\r\n                        <MenuItem value=\"CODING\">Coding</MenuItem>\r\n                        <MenuItem value=\"SOFTWARE_DEVELOPMENT\">Software Development</MenuItem>\r\n                        <MenuItem value=\"CYBERSECURITY\">Cybersecurity</MenuItem>\r\n                        <MenuItem value=\"DATA_SCIENCE\">Data Science</MenuItem>\r\n                        <MenuItem value=\"OTHER\">Other</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                \r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    id=\"description\"\r\n                    label=\"Description\"\r\n                    name=\"description\"\r\n                    value={formData.description}\r\n                    onChange={handleInputChange}\r\n                    multiline\r\n                    rows={4}\r\n                    disabled={isSubmitting}\r\n                />\r\n                \r\n                {/* Existing Media Section */}\r\n                {existingMedia.length > 0 && (\r\n                    <Box sx={{ my: 3 }}>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Current Media\r\n                        </Typography>\r\n                        <Grid container spacing={2}>\r\n                            {existingMedia.map((media) => {\r\n                                const isRetained = retainMediaIds.includes(media.id);\r\n                                const apiUrl = `${process.env.REACT_APP_API_URL || ''}/api/posts/media/${media.url}`;\r\n                                \r\n                                return (\r\n                                    <Grid item xs={12} sm={4} key={media.id}>\r\n                                        <Card \r\n                                            sx={{ \r\n                                                position: 'relative',\r\n                                                opacity: isRetained ? 1 : 0.5,\r\n                                                transition: 'opacity 0.3s'\r\n                                            }}\r\n                                        >\r\n                                            {media.type === 'IMAGE' ? (\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    height=\"140\"\r\n                                                    image={apiUrl}\r\n                                                    alt=\"Post media\"\r\n                                                />\r\n                                            ) : (\r\n                                                <CardMedia\r\n                                                    component=\"video\"\r\n                                                    height=\"140\"\r\n                                                    src={apiUrl}\r\n                                                    controls\r\n                                                />\r\n                                            )}\r\n                                            <Chip\r\n                                                label={isRetained ? \"Remove\" : \"Deleted\"}\r\n                                                color={isRetained ? \"primary\" : \"error\"}\r\n                                                onClick={() => toggleExistingMedia(media.id)}\r\n                                                sx={{\r\n                                                    position: 'absolute',\r\n                                                    top: 8,\r\n                                                    right: 8,\r\n                                                }}\r\n                                                disabled={isSubmitting}\r\n                                            />\r\n                                        </Card>\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        </Grid>\r\n                    </Box>\r\n                )}\r\n                \r\n                {/* New Media Preview Section */}\r\n                {newFilePreviews.length > 0 && (\r\n                    <Box sx={{ my: 3 }}>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            New Media\r\n                        </Typography>\r\n                        <Grid container spacing={2}>\r\n                            {newFilePreviews.map((preview, index) => (\r\n                                <Grid item xs={12} sm={4} key={index}>\r\n                                    <Card sx={{ position: 'relative' }}>\r\n                                        {preview.type === 'image' ? (\r\n                                            <CardMedia\r\n                                                component=\"img\"\r\n                                                height=\"140\"\r\n                                                image={preview.url}\r\n                                                alt={`Preview ${index}`}\r\n                                            />\r\n                                        ) : (\r\n                                            <CardMedia\r\n                                                component=\"video\"\r\n                                                height=\"140\"\r\n                                                src={preview.url}\r\n                                                controls\r\n                                            />\r\n                                        )}\r\n                                        <IconButton\r\n                                            sx={{\r\n                                                position: 'absolute',\r\n                                                top: 5,\r\n                                                right: 5,\r\n                                                bgcolor: 'rgba(255, 255, 255, 0.7)',\r\n                                            }}\r\n                                            size=\"small\"\r\n                                            onClick={() => removeNewFile(index)}\r\n                                            disabled={isSubmitting}\r\n                                        >\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </Card>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </Box>\r\n                )}\r\n                \r\n                {/* Media Upload Section */}\r\n                {(retainMediaIds.length + newFiles.length < 3) && (\r\n                    <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\r\n                        <input\r\n                            ref={fileInputRef}\r\n                            accept=\"image/*,video/*\"\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            multiple\r\n                            onChange={handleNewFileSelect}\r\n                            style={{ display: 'none' }}\r\n                            disabled={isSubmitting}\r\n                        />\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                            <Button\r\n                                component=\"label\"\r\n                                htmlFor=\"contained-button-file\"\r\n                                variant=\"outlined\"\r\n                                startIcon={<UploadIcon />}\r\n                                disabled={isSubmitting || \r\n                                         (retainMediaIds.length + newFiles.length >= 3) || \r\n                                         existingMedia.some(m => retainMediaIds.includes(m.id) && m.type === 'VIDEO') ||\r\n                                         newFiles.some(f => f.type.startsWith('video/'))}\r\n                            >\r\n                                Add Media\r\n                            </Button>\r\n                            \r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                {(retainMediaIds.length + newFiles.length)}/3 files\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n                )}\r\n                \r\n                <Box sx={{ mt: 4, display: 'flex', justifyContent: 'space-between' }}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={() => navigate(`/posts/${id}`)}\r\n                        disabled={isSubmitting}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        disabled={isSubmitting || !formData.title.trim() || !formData.category}\r\n                        startIcon={isSubmitting ? <CircularProgress size={20} color=\"inherit\" /> : null}\r\n                    >\r\n                        {isSubmitting ? 'Saving...' : 'Update Post'}\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default EditPostForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}