{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\PAF Project\\\\prolearnX\\\\frontend\\\\src\\\\components\\\\post\\\\DeletePostDialog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, CircularProgress } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport PostService from '../../services/PostService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeletePostDialog = ({\n  open,\n  handleClose,\n  postId,\n  postTitle\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [isDeleting, setIsDeleting] = useState(false);\n  const handleDelete = async () => {\n    setIsDeleting(true);\n    try {\n      await PostService.deletePost(postId);\n      // Close dialog and navigate away\n      handleClose();\n      navigate('/');\n    } catch (error) {\n      console.error('Error deleting post:', error);\n      alert('Failed to delete the post. Please try again.');\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: !isDeleting ? handleClose : undefined,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Delete Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: [\"Are you sure you want to delete \\\"\", postTitle, \"\\\"? This action cannot be undone.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        disabled: isDeleting,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        onClick: handleDelete,\n        disabled: isDeleting,\n        startIcon: isDeleting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 35\n        }, this) : null,\n        children: isDeleting ? 'Deleting...' : 'Delete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(DeletePostDialog, \"e15sadt0k/u04SZVqI2ie3I+xlw=\", false, function () {\n  return [useNavigate];\n});\n_c = DeletePostDialog;\nexport default DeletePostDialog;\nvar _c;\n$RefreshReg$(_c, \"DeletePostDialog\");","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","CircularProgress","useNavigate","PostService","jsxDEV","_jsxDEV","DeletePostDialog","open","handleClose","postId","postTitle","_s","navigate","isDeleting","setIsDeleting","handleDelete","deletePost","error","console","alert","onClose","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","color","startIcon","size","_c","$RefreshReg$"],"sources":["D:/Projects/PAF Project/prolearnX/frontend/src/components/post/DeletePostDialog.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n  Dialog, \r\n  DialogTitle, \r\n  DialogContent, \r\n  DialogContentText, \r\n  DialogActions, \r\n  Button,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PostService from '../../services/PostService';\r\n\r\nconst DeletePostDialog = ({ open, handleClose, postId, postTitle }) => {\r\n  const navigate = useNavigate();\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  \r\n  const handleDelete = async () => {\r\n    setIsDeleting(true);\r\n    try {\r\n      await PostService.deletePost(postId);\r\n      // Close dialog and navigate away\r\n      handleClose();\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Error deleting post:', error);\r\n      alert('Failed to delete the post. Please try again.');\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={!isDeleting ? handleClose : undefined}\r\n    >\r\n      <DialogTitle>Delete Post</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Are you sure you want to delete \"{postTitle}\"? This action cannot be undone.\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button \r\n          onClick={handleClose}\r\n          disabled={isDeleting}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button \r\n          color=\"error\" \r\n          onClick={handleDelete}\r\n          disabled={isDeleting}\r\n          startIcon={isDeleting ? <CircularProgress size={20} /> : null}\r\n        >\r\n          {isDeleting ? 'Deleting...' : 'Delete'}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DeletePostDialog;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}